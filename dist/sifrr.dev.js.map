{"version":3,"file":"sifrr.dev.js","sources":["../src/eslintrc.js","../src/loaddir.js","../src/dev.js"],"sourcesContent":["module.exports = {\n  env: {\n    browser: true,\n    node: true,\n    es6: true,\n    mocha: true\n  },\n  // for tests\n  globals: {\n    ENV: true,\n    fs: false,\n    path: false,\n    chai: false,\n    sinon: false,\n    assert: false,\n    expect: false,\n    should: false,\n    window: false,\n    delay: false,\n    puppeteer: false,\n    server: false,\n    port: false,\n    PATH: false,\n    page: false,\n    browser: false,\n    Sifrr: false,\n    SifrrStorage: false\n  },\n  extends: 'eslint:recommended',\n  parserOptions: {\n    sourceType: 'module',\n    ecmaVersion: 2017,\n    esversion: 2017\n  },\n  rules: {\n    indent: [\n      'error',\n      2\n    ],\n    'linebreak-style': [\n      'error',\n      'unix'\n    ],\n    quotes: [\n      'error',\n      'single',\n      {\n        avoidEscape: true,\n        allowTemplateLiterals: true\n      }\n    ],\n    semi: [\n      'warn',\n      'always'\n    ],\n    'quote-props': [\n      'error',\n      'as-needed'\n    ],\n    'no-var': [\n      'error'\n    ],\n    'max-lines': [\n      'error',\n      220 // Change to 200 after refactoring API.Model\n    ],\n    'mocha/no-exclusive-tests': 'error'\n  },\n  plugins: [\n    'html',\n    'mocha'\n  ],\n  settings: {\n    'html/indent': '+2'\n  }\n};\n","const fs = require('fs'),\n  path = require('path');\n\nfunction loadDir(dir, onFile, deep = 100) {\n  fs.readdirSync(dir).forEach(file => {\n    const filePath = path.join(dir, file);\n    fs.statSync(filePath).isDirectory()\n      ? (deep > 0 ? loadDir(filePath, onFile, deep - 1) : () => {})\n      : onFile(filePath);\n  });\n}\n\nmodule.exports = loadDir;\n","module.exports = {\n  eslintrc: require('./eslintrc'),\n  loaddir: require('./loaddir')\n};\n"],"names":["env","browser","node","es6","mocha","globals","ENV","fs","path","chai","sinon","assert","expect","should","window","delay","puppeteer","server","port","PATH","page","Sifrr","SifrrStorage","extends","parserOptions","sourceType","ecmaVersion","esversion","rules","indent","quotes","avoidEscape","allowTemplateLiterals","semi","plugins","settings","loadDir","dir","onFile","deep","readdirSync","forEach","file","filePath","join","statSync","isDirectory","eslintrc","require$$0","loaddir","require$$1"],"mappings":";;;;;;;;;;EAAA,YAAc,GAAG;EACfA,EAAAA,GAAG,EAAE;EACHC,IAAAA,OAAO,EAAE,IADN;EAEHC,IAAAA,IAAI,EAAE,IAFH;EAGHC,IAAAA,GAAG,EAAE,IAHF;EAIHC,IAAAA,KAAK,EAAE;EAJJ,GADU;EAQfC,EAAAA,OAAO,EAAE;EACPC,IAAAA,GAAG,EAAE,IADE;EAEPC,IAAAA,EAAE,EAAE,KAFG;EAGPC,IAAAA,IAAI,EAAE,KAHC;EAIPC,IAAAA,IAAI,EAAE,KAJC;EAKPC,IAAAA,KAAK,EAAE,KALA;EAMPC,IAAAA,MAAM,EAAE,KAND;EAOPC,IAAAA,MAAM,EAAE,KAPD;EAQPC,IAAAA,MAAM,EAAE,KARD;EASPC,IAAAA,MAAM,EAAE,KATD;EAUPC,IAAAA,KAAK,EAAE,KAVA;EAWPC,IAAAA,SAAS,EAAE,KAXJ;EAYPC,IAAAA,MAAM,EAAE,KAZD;EAaPC,IAAAA,IAAI,EAAE,KAbC;EAcPC,IAAAA,IAAI,EAAE,KAdC;EAePC,IAAAA,IAAI,EAAE,KAfC;EAgBPnB,IAAAA,OAAO,EAAE,KAhBF;EAiBPoB,IAAAA,KAAK,EAAE,KAjBA;EAkBPC,IAAAA,YAAY,EAAE;EAlBP,GARM;EA4BfC,EAAAA,OAAO,EAAE,oBA5BM;EA6BfC,EAAAA,aAAa,EAAE;EACbC,IAAAA,UAAU,EAAE,QADC;EAEbC,IAAAA,WAAW,EAAE,IAFA;EAGbC,IAAAA,SAAS,EAAE;EAHE,GA7BA;EAkCfC,EAAAA,KAAK,EAAE;EACLC,IAAAA,MAAM,EAAE,CACN,OADM,EAEN,CAFM,CADH;EAKL,uBAAmB,CACjB,OADiB,EAEjB,MAFiB,CALd;EASLC,IAAAA,MAAM,EAAE,CACN,OADM,EAEN,QAFM,EAGN;EACEC,MAAAA,WAAW,EAAE,IADf;EAEEC,MAAAA,qBAAqB,EAAE;EAFzB,KAHM,CATH;EAiBLC,IAAAA,IAAI,EAAE,CACJ,MADI,EAEJ,QAFI,CAjBD;EAqBL,mBAAe,CACb,OADa,EAEb,WAFa,CArBV;EAyBL,cAAU,CACR,OADQ,CAzBL;EA4BL,iBAAa,CACX,OADW,EAEX,GAFW;EAAA,KA5BR;EAgCL,gCAA4B;EAhCvB,GAlCQ;EAoEfC,EAAAA,OAAO,EAAE,CACP,MADO,EAEP,OAFO,CApEM;EAwEfC,EAAAA,QAAQ,EAAE;EACR,mBAAe;EADP;EAxEK,CAAjB;;ECGA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8BC,IAAI,GAAG,GAArC,EAA0C;EACxChC,EAAAA,EAAE,CAACiC,WAAH,CAAeH,GAAf,EAAoBI,OAApB,CAA4BC,IAAI,IAAI;EAClC,UAAMC,QAAQ,GAAGnC,IAAI,CAACoC,IAAL,CAAUP,GAAV,EAAeK,IAAf,CAAjB;EACAnC,IAAAA,EAAE,CAACsC,QAAH,CAAYF,QAAZ,EAAsBG,WAAtB,KACKP,IAAI,GAAG,CAAP,GAAWH,OAAO,CAACO,QAAD,EAAWL,MAAX,EAAmBC,IAAI,GAAG,CAA1B,CAAlB,GAAiD,MAAM,EAD5D,GAEID,MAAM,CAACK,QAAD,CAFV;EAGD,GALD;EAMD;EAED,WAAc,GAAGP,OAAjB;;ECZA,OAAc,GAAG;EACfW,EAAAA,QAAQ,EAAEC,QADK;EAEfC,EAAAA,OAAO,EAAEC;EAFM,CAAjB;;;;;;;;;;;;;;;;;;;"}