/*! sifrr.dev v0.0.13 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-dev */
import e from"fs";import r from"path";import t from"rollup-plugin-babel";import o from"rollup-plugin-terser";import s from"rollup-plugin-node-resolve";import n from"rollup-plugin-commonjs";import i from"rollup-plugin-cleanup";import a from"rollup-plugin-postcss";import c from"rollup-plugin-html";import l from"rollup-plugin-typescript2";import p from"typescript";import u from"cssnano";import m from"autoprefixer";import d from"conventional-changelog";import f from"child_process";import g from"mocha";import w from"json-fn";import h from"chai";import y from"sinon";import v from"crypto";import b from"puppeteer";import j from"chai-as-promised";import S from"istanbul-lib-coverage";import _ from"istanbul-lib-source-maps";import x from"istanbul-lib-instrument";import F from"istanbul-api";import T from"inspector";import $ from"@babel/register";import k from"ts-node";import P from"istanbul-lib-hook";import E from"portfinder";import C from"@sifrr/server";var A=function t({dir:o,onFile:s=(()=>{}),onDir:n=(()=>{}),deep:i=100}={}){return!(!e.existsSync(o)||!e.statSync(o).isDirectory()||(e.readdirSync(o).forEach(a=>{const c=r.join(o,a);e.statSync(c).isDirectory()?n(c):s(c),i>0&&t({dir:c,onFile:s,onDir:n,deep:i-1})}),0))};var O=function e(r,t,o=!1){switch(null===(s=r)?"null":"object"==typeof s&&Array.isArray(s)?"array":typeof s){case"array":return o?[...r,...t]:[...t];case"object":return Object.keys(t).forEach(s=>{r[s]=e(r[s],t[s],o)}),r;default:return void 0===t?r:t}var s},N="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function D(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}const R=o.terser;var M=function({name:o,inputFile:d,outputFolder:f,minify:g=!1,type:w="cjs",outputFileName:h},y={}){const v=r.basename(d).slice(0,r.basename(d).lastIndexOf(".")).toLowerCase(),b=(w=Array.isArray(w)?w:[w]).map(e=>{const t="cjs"===e?"cjs":"browser"===e?"iife":"es";return{file:r.join(f,`./${h||v}${"es"===t?".module":"cjs"===t?".cjs":""}${g?".min":""}.js`),format:t,name:o,sourcemap:!g,preferConst:!0,...y.output}}),j={input:d,output:0===b.length?b[0]:b,external:Object.keys(D(r.resolve("./package.json")).dependencies||{}),plugins:[s({browser:"browser"===w,mainFields:["module","main"]}),!!e.existsSync(r.resolve("tsconfig.json"))&&l({typescript:p,declarationDir:"dist/type",cacheRoot:"./.ts_cache"}),n(),a({extensions:[".css",".scss",".sass",".less"],inject:!1,plugins:[!!g&&u({preset:["default"]}),m].filter(e=>e)}),c({htmlMinifierOptions:g?{collapseWhitespace:!0,collapseBooleanAttributes:!0,conservativeCollapse:!0,minifyJS:!0}:{}}),i(),t({exclude:"node_modules/**",rootMode:"upward"}),!!g&&R({output:{comments:"all"}})].filter(e=>e)};return delete y.output,O(j,y,!0)};const H=/tag:\s*[v=]?(.+?)[,)]/gi;const W=f.spawn,I=f.exec,J=/((?:["'][^"]+["'])|(?:[^ ]+))/;var G=function(e,r={}){return 0===e.indexOf("sh ")||r.spawn?(process.stdout.write(`Running command: ${e} with spawn \n`),r.stdio=r.stdio||"inherit",new Promise((t,o)=>{const[s,...n]=e.split(J).filter(e=>""!==e.trim());W(s,n,r).on("close",r=>{0!==r?(process.stdout.write(`Command exited with code ${r}: ${e} \n`),o(r)):(process.stdout.write(`Finished command: ${e} \n`),t())})})):(process.stdout.write(`Running command: ${e} \n`),new Promise((t,o)=>{I(e,r,(r,s,n)=>{s&&process.stdout.write(`out: ${s} \n`),n&&process.stderr.write(`err: ${n} \n`),null!==r&&(process.stderr.write(`exec error: ${r}`),o(r)),t({stdout:s,stderr:n}),process.stdout.write(`Finished command: ${e} \n`)})}))};var L=async function(e,t="v"){const o=t+(e=e||D(r.resolve("./package.json")).version);return await G("git pull"),G(`git rev-parse ${o}`).then(()=>(process.stdout.write(`Tag ${o} already exists.\n`),!0)).catch(()=>!1)};var U=async function(e,t="v"){const o=t+(e=e||D(r.resolve("./package.json")).version);return!await L(e,t)&&(await G(`git tag -a ${o} -m "Release of ${o}"`),process.stdout.write("\n"),await G(`git push origin ${o}`),!0)},V=parseInt("0777",8),B=X.mkdirp=X.mkdirP=X;function X(t,o,s,n){"function"==typeof o?(s=o,o={}):o&&"object"==typeof o||(o={mode:o});var i=o.mode,a=o.fs||e;void 0===i&&(i=V&~process.umask()),n||(n=null);var c=s||function(){};t=r.resolve(t),a.mkdir(t,i,function(e){if(!e)return c(null,n=n||t);switch(e.code){case"ENOENT":X(r.dirname(t),o,function(e,r){e?c(e,r):X(t,o,c,r)});break;default:a.stat(t,function(r,t){r||!t.isDirectory()?c(e,n):c(null,n)})}})}X.sync=function t(o,s,n){s&&"object"==typeof s||(s={mode:s});var i=s.mode,a=s.fs||e;void 0===i&&(i=V&~process.umask()),n||(n=null),o=r.resolve(o);try{a.mkdirSync(o,i),n=n||o}catch(e){switch(e.code){case"ENOENT":n=t(r.dirname(o),s,n),t(o,s,n);break;default:var c;try{c=a.statSync(o)}catch(r){throw e}if(!c.isDirectory())throw e}}return n};var q=function(t,o,s=""){const n=r.join(o,`${Date.now()}-${s}-${v.randomBytes(10).toString("hex")}.json`);B.sync(r.dirname(n),e=>{if(e)throw e});const i=JSON.stringify(t||{});"{}"!==i&&e.writeFileSync(n,i)};async function z(e,r){const t=await e.evaluate(()=>window.__coverage__);q(t,r,"browser-coverage")}var K=async function(e,r,t){let o;N.browser?o=N.browser:(o=N.browser="string"==typeof t?await b.connect({browserWSEndpoint:t,ignoreHTTPSErrors:!0}):await b.launch({args:["--no-sandbox","--disable-setuid-sandbox"],ignoreHTTPSErrors:!0,headless:"false"!==process.env.HEADLESS,devtools:!1}),e&&r&&(o.__newPage=o.newPage,o.newPage=async()=>{const e=await o.__newPage();return function(e,r){e.goto=async(t,o)=>(await z(e,r),e.mainFrame().goto(t,o)),e._close=e.close,e.close=async()=>(await z(e,r),e._close())}(e,r),e},o.__close=o.close,o.close=async()=>{const e=await o.pages();for(let r=0;r<e.length;r++)await e[r].close();return o.__close()}));const s=await o.newPage();return await s.setViewport({width:1280,height:800}),N.page||(N.page=s),{browser:o,page:s}};const{fork:Q}=f;var Y=async function(e,t=!0){const o=[];let s=0;t&&await K();for(let n=0;n<e.length;n++){const i=e[n];i.browserWSEndpoint=t?N.browser.wsEndpoint():i.browserWSEndpoint;const a=Q(r.join(__dirname,"./run"),process.argv);o.push(new Promise(e=>{a.on("exit",r=>{r&&r>0&&N.console.log("[36m%s[0m",`Config#${n}: tests from ${i.root} exited with code ${r}`),e()}),a.on("message",e=>{s+=Number(e)}),a.on("error",e=>{N.console.error(e)}),a.send(w.stringify(i))}))}if(await Promise.all(o),t&&await N.browser.close(),s>0)throw s;return 0};function Z(){try{let e,r,t=new Error;for(Error.prepareStackTrace=function(e,r){return r},r=t.stack.shift().getFileName();t.stack.length;)if(r!==(e=t.stack.shift().getFileName()))return e}catch(e){}}var ee=(e,t)=>{N.__pdescribes=[],N.ENV=process.env.NODE_ENV=process.env.NODE_ENV||"test",N.Mocha=g,N.chai=h,N.sinon=N.sinon||y.createSandbox(),N.assert=chai.assert,N.expect=chai.expect,N.should=chai.should(),N.delay=e=>new Promise(r=>{setTimeout(function(){r()},e)}),N.pdescribe=function(o,s){const n=Z();if(n&&e&&!e.parallel&&t){const t=O({},e);O(t,{browserWSEndpoint:N.browser?N.browser.wsEndpoint():void 0,filters:[n],parallel:!0,junitXmlFile:r.join(e.junitXmlFile,`../../${r.basename(Z()).replace(".test.js","")}/results.xml`),port:"random"}),N.__pdescribes.push(Y([t],!0).catch(e=>e))}else describe(o,s)},chai.use(j)};const{createInstrumenter:re}=x,te=F.createReporter(),oe=re({esModules:!0});var se=function(r,t,o,s=["html"]){const n=_.createSourceMapStore({});let i=S.createCoverageMap();e.existsSync(r)&&(A({dir:r,onFile:r=>{r.match(/browser/)&&i.merge(JSON.parse(e.readFileSync(r)))}}),i=n.transformCoverage(i).map,A({dir:r,onFile:r=>{r.match(/unit/)&&i.merge(JSON.parse(e.readFileSync(r)))}}),A({dir:t,onFile:r=>{if(".js"===r.slice(-3)&&r.match(o)&&!i.data[r]){const t=e.readFileSync(r).toString();oe.instrumentSync(t,r);const o={};o[r]=oe.fileCoverage,i.merge(o)}}}),i.filter(e=>e.match(o)),s.forEach(e=>te.add(e)),te.write(i))},ne=async function(){const e=await E.getPortPromise({port:1e4});return[e,await E.getPortPromise({port:e+1})]};const ie=x.createInstrumenter(),{App:ae,SSLApp:ce}=C;function le(t,o,s=!1){A({dir:o,onFile:n=>{s&&".js"===n.slice(-3)&&e.existsSync(n+".map")?t.get("/"+r.relative(o,n),r=>{r.onAborted(N.console.log);const t=e.readFileSync(n,"utf-8");r.writeHeader("content-type","application/javascript; charset=UTF-8"),r.end(ie.instrumentSync(t,n,JSON.parse(e.readFileSync(n+".map"))))}):t.file("/"+r.relative(o,n),n)}})}var pe=async function(t,{extraStaticFolders:o=[],setGlobals:s=!0,coverage:n=!0,port:i=!1,securePort:a=!1}={}){const c=[];function l(e,s,i){le(e,t,n),le(e,r.join(t,"../../dist"),n),o.forEach(r=>{le(e,r,n)}),c.push([e,s,i])}let p,u;if(i){let o;"function"==typeof(o=e.existsSync(r.join(t,"server.js"))?D(r.join(t,"server.js")):new ae).file?l(o,i,!1):c.push([o,i,!1]),p=o}if(a){let o;"function"==typeof(o=e.existsSync(r.join(t,"secureserver.js"))?D(r.join(t,"secureserver.js")):new ce({key_file_name:r.join(__dirname,"keys/server.key"),cert_file_name:r.join(__dirname,"keys/server.crt")})).file?l(o,a,!0):c.push([o,a,!0]),u=o}return{secureApp:u,app:p,listen:async()=>{for(let e=0;e<c.length;e++){let[r,o,n]=c[e];"random"===o&&(o=(await ne())[0]),s&&o&&(N[n?"SPATH":"PATH"]=`http${n?"s":""}://localhost:${o}`,N[n?"securePort":"port"]=o),r.listen(o,e=>{e?N.console.log(`Test server listening on port ${o}, serving ${t}`):N.console.log("Test server failed to listen to port "+o)})}},close:()=>{u&&u.close&&u.close(),p&&p.close&&p.close()}}};function ue(e,r,t,o){A({dir:e,onFile:e=>{o.map(r=>e.indexOf(r)>=0).indexOf(!0)>=0&&e.match(t)&&r.addFile(e)}})}async function me(e){if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++)await G(e[r]).catch(N.console.error);else await G(e).catch(N.console.error)}async function de(t={},o=!1,s){if(Array.isArray(t)){for(let e=0;e<t.length;e++)await me(t[e].preCommand),delete t[e].preCommand;if(o)return Y(t,s);{let e=0;for(let r=0;r<t.length;r++)e+=await de(t[r]).catch(e=>Number(e)?Number(e):(process.stderr.write(e+"\n"),0));if(e>0)throw e;return 0}}const{root:n=r.resolve("./"),serverOnly:i=!1,runUnitTests:a=!0,runBrowserTests:c=!0,coverage:l=!1,setGlobals:p=!0,testFileRegex:u=/\.test\.js$/,sourceFileRegex:m=/\.js$/,filters:d=[""],folders:f={},preCommand:w=!1,port:h="random",securePort:y=!1,useJunitReporter:v=!1,junitXmlFile:b=r.join(n,`./test-results/${r.basename(n)}/results.xml`),inspect:j=!1,reporters:S=["html"],mochaOptions:_={},before:F,browserWSEndpoint:E}=t;j&&T.open(void 0,void 0,!0);const C="function"==typeof F&&F();C instanceof Promise&&await C;const A=O({unitTest:r.join(n,"./test/unit"),browserTest:r.join(n,"./test/browser"),public:r.join(n,"./test/public"),static:[],coverage:r.join(n,"./.nyc_output"),source:r.join(n,"./src")},f,!0);if($({presets:["@babel/env"],ignore:[e=>e.indexOf(A.browserTest)>-1,e=>e.indexOf("node_modules")>-1]}),e.existsSync(r.join(n,"tsconfig.json"))&&k.register({}),l&&!N.__s_dev_cov){const{createInstrumenter:e}=x,r=e(),{hookRequire:t}=P;t(e=>e.indexOf(A.source)>-1&&e.match(m),(e,{filename:t})=>r.instrumentSync(e,t)),N.__s_dev_cov=!0}await me(w);const D=await pe(A.public,{extraStaticFolders:A.static,setGlobals:p,coverage:l,port:h,securePort:y});if(i)return await D.listen(),"server";p&&ee(t,o),v&&(_.reporter="mocha-junit-reporter",_.reporterOptions={mochaFile:b});const R=new g(_);return!c&&a||!e.existsSync(A.browserTest)||(await D.listen(),await K(l,A.coverage,E),ue(A.browserTest,R,u,d)),!a&&c||!e.existsSync(A.unitTest)||ue(A.unitTest,R,u,d),new Promise((e,r)=>{R.run(async t=>{if(D.close(),N.browser&&!E&&(await browser.close(),delete N.browser,delete N.page),N.__pdescribes){t+=(await Promise.all(N.__pdescribes)).reduce((e,r)=>e+r,0)}l&&(q(N.__coverage__,A.coverage,"unit-coverage"),se(A.coverage,A.source,m,S)),t?r(t):e(0)})})}process.on("message",async e=>{e=w.parse(e),await de(e,!0).catch(e=>{Number(e)?process.send(`${e}`):process.stderr.write(e+"\n")}).then(e=>{"server"!==e&&process.exit()})});var fe={loadDir:A,deepMerge:O,getRollupConfig:M,generateChangelog:({folder:t=r.resolve("./"),releaseCount:o=0,changelogFile:s=r.join(t,"./CHANGELOG.md"),outputUnreleased:n=!1,multiRepo:i=!1}={})=>{let a="",c=!1,l=D(r.join(t,"./package.json")).version;const p=function(e,r){n&&!c&&(e.version=l,c=!0);let t=H.exec(e.gitTags);H.lastIndex=0,t&&(e.version=t[1]),r(null,e)},u={pkg:{path:r.join(t,"./package.json")},preset:"angular",releaseCount:o,outputUnreleased:n,gitRawCommitsOpts:{path:t},transform:p};return e.existsSync(s)&&(0===o&&e.writeFileSync(s,""),a=e.readFileSync(s,"utf-8")),i&&(u.transform=(e,r)=>{e.scope&&e.scope===i?e.scope=null:e.type="chore",p(e,r)}),new Promise((r,t)=>{d(u).pipe(e.createWriteStream(s)).on("error",t).on("finish",()=>{e.appendFileSync(s,a),r(s)})})},exec:G,checkTag:L,releaseTag:U,gitAddCommitPush:async function({preCommand:e=!1,files:r="*",commitMsg:t="chore: add new files",push:o=!0}={}){if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++)await G(e[r]);else await G(e);if(Array.isArray(r))for(let e=0;e<r.length;e++)await G(`git ls-files '${r[e]}' | xargs git add`);else await G(`git ls-files '${r}' | xargs git add`);await G(`git commit -m "${t}"`).then(()=>{o&&G("git push")}).catch(()=>{process.stdout.write("Nothing to commit, not running git push. \n")})},runTests:de,objectSelect:(e,r=[])=>{const t={};return r.forEach(r=>{e[r]&&(t[r]=e[r])}),t}},ge=fe.loadDir,we=fe.deepMerge,he=fe.getRollupConfig,ye=fe.generateChangelog,ve=fe.exec,be=fe.checkTag,je=fe.releaseTag,Se=fe.gitAddCommitPush,_e=fe.runTests,xe=fe.objectSelect;export default fe;export{be as checkTag,we as deepMerge,ve as exec,ye as generateChangelog,he as getRollupConfig,Se as gitAddCommitPush,ge as loadDir,xe as objectSelect,je as releaseTag,_e as runTests};
/*! (c) @aadityataparia */
