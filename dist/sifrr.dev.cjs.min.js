/*! sifrr.dev v0.0.13 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-dev */
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});const fs=_interopDefault(require("fs")),path=_interopDefault(require("path")),rollupPluginBabel=_interopDefault(require("rollup-plugin-babel")),rollupPluginTerser=_interopDefault(require("rollup-plugin-terser")),rollupPluginNodeResolve=_interopDefault(require("rollup-plugin-node-resolve")),rollupPluginCommonjs=_interopDefault(require("rollup-plugin-commonjs")),rollupPluginCleanup=_interopDefault(require("rollup-plugin-cleanup")),rollupPluginPostcss=_interopDefault(require("rollup-plugin-postcss")),rollupPluginHtml=_interopDefault(require("rollup-plugin-html")),cssnano=_interopDefault(require("cssnano")),autoprefixer=_interopDefault(require("autoprefixer")),conventionalChangelog=_interopDefault(require("conventional-changelog")),child_process=_interopDefault(require("child_process")),mocha=_interopDefault(require("mocha")),jsonFn=_interopDefault(require("json-fn")),chai$1=_interopDefault(require("chai")),sinon=_interopDefault(require("sinon")),crypto=_interopDefault(require("crypto")),puppeteer=_interopDefault(require("puppeteer")),chaiAsPromised=_interopDefault(require("chai-as-promised")),istanbulLibCoverage=_interopDefault(require("istanbul-lib-coverage")),istanbulLibSourceMaps=_interopDefault(require("istanbul-lib-source-maps")),istanbulLibInstrument=_interopDefault(require("istanbul-lib-instrument")),istanbulApi=_interopDefault(require("istanbul-api")),inspector=_interopDefault(require("inspector")),istanbulLibHook=_interopDefault(require("istanbul-lib-hook")),portfinder=_interopDefault(require("portfinder")),server$1=_interopDefault(require("@sifrr/server"));function loadDir({dir:e,onFile:r=(()=>{}),onDir:t=(()=>{}),deep:o=100}={}){return!(!fs.existsSync(e)||!fs.statSync(e).isDirectory())&&(fs.readdirSync(e).forEach(s=>{const n=path.join(e,s);fs.statSync(n).isDirectory()?t(n):r(n),o>0&&loadDir({dir:n,onFile:r,onDir:t,deep:o-1})}),!0)}var loaddir=loadDir;function type(e){return null===e?"null":"object"==typeof e&&Array.isArray(e)?"array":typeof e}function deepMerge(e,r,t=!1){switch(type(e)){case"array":return t?[...e,...r]:[...r];case"object":return Object.keys(r).forEach(o=>{e[o]=deepMerge(e[o],r[o],t)}),e;default:return void 0===r?e:r}}var deepmerge=deepMerge,commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs")}const terser=rollupPluginTerser.terser;function moduleConfig({name:e,inputFile:r,outputFolder:t,minify:o=!1,type:s="cjs",outputFileName:n},i){const a=path.basename(r).slice(0,path.basename(r).lastIndexOf(".")).toLowerCase(),l="cjs"===s?"cjs":"browser"===s?"umd":"es",c={input:r,output:{file:path.join(t,`./${n||a}${"es"===l?".module":"cjs"===l?".cjs":""}${o?".min":""}.js`),format:l,name:e,sourcemap:!o,preferConst:!0,exports:"named"},external:Object.keys(commonjsRequire(path.resolve("./package.json")).dependencies),plugins:[rollupPluginNodeResolve({browser:"browser"===s,mainFields:["module","main"]}),rollupPluginCommonjs(),rollupPluginPostcss({extensions:[".css",".scss",".sass",".less"],inject:!1,plugins:[!!o&&cssnano({preset:["default"]}),autoprefixer].filter(e=>e)}),rollupPluginHtml({htmlMinifierOptions:o?{collapseWhitespace:!0,collapseBooleanAttributes:!0,conservativeCollapse:!0,minifyJS:!0}:{}}),rollupPluginCleanup(),rollupPluginBabel({exclude:"node_modules/**",rootMode:"upward"})]};return o&&c.plugins.push(terser({output:{comments:"all"}})),deepmerge(c,i,!0)}var getrollupconfig=moduleConfig;const rtag=/tag:\s*[v=]?(.+?)[,)]/gi;var generatechangelog=({folder:e=path.resolve("./"),releaseCount:r=0,changelogFile:t=path.join(e,"./CHANGELOG.md"),outputUnreleased:o=!1,multiRepo:s=!1}={})=>{let n="",i=!1,a=commonjsRequire(path.join(e,"./package.json")).version;const l=function(e,r){o&&!i&&(e.version=a,i=!0);let t=rtag.exec(e.gitTags);rtag.lastIndex=0,t&&(e.version=t[1]),r(null,e)},c={pkg:{path:path.join(e,"./package.json")},preset:"angular",releaseCount:r,outputUnreleased:o,gitRawCommitsOpts:{path:e},transform:l};return fs.existsSync(t)&&(0===r&&fs.writeFileSync(t,""),n=fs.readFileSync(t,"utf-8")),s&&(c.transform=(e,r)=>{e.scope&&e.scope===s?e.scope=null:e.type="chore",l(e,r)}),new Promise((e,r)=>{conventionalChangelog(c).pipe(fs.createWriteStream(t)).on("error",r).on("finish",()=>{fs.appendFileSync(t,n),e(t)})})};const spawn=child_process.spawn,execa=child_process.exec,splitRegex=/((?:["'][^"]+["'])|(?:[^ ]+))/;function exec(e,r={}){return 0===e.indexOf("sh ")||r.spawn?(process.stdout.write(`Running command: ${e} with spawn \n`),r.stdio=r.stdio||"inherit",new Promise((t,o)=>{const[s,...n]=e.split(splitRegex).filter(e=>""!==e.trim());spawn(s,n,r).on("close",r=>{0!==r?(process.stdout.write(`Command exited with code ${r}: ${e} \n`),o(r)):(process.stdout.write(`Finished command: ${e} \n`),t())})})):(process.stdout.write(`Running command: ${e} \n`),new Promise((t,o)=>{execa(e,r,(r,s,n)=>{s&&process.stdout.write(`out: ${s} \n`),n&&process.stderr.write(`err: ${n} \n`),null!==r&&(process.stderr.write(`exec error: ${r}`),o(r)),t({stdout:s,stderr:n}),process.stdout.write(`Finished command: ${e} \n`)})}))}var exec_1=exec;async function checkTag(e,r="v"){const t=r+(e=e||commonjsRequire(path.resolve("./package.json")).version);return await exec_1("git pull"),exec_1(`git rev-parse ${t}`).then(()=>(process.stdout.write(`Tag ${t} already exists.\n`),!0)).catch(()=>!1)}var checktag=checkTag;async function releaseTag(e,r="v"){const t=r+(e=e||commonjsRequire(path.resolve("./package.json")).version);return!await checktag(e,r)&&(await exec_1(`git tag -a ${t} -m "Release of ${t}"`),process.stdout.write("\n"),await exec_1(`git push origin ${t}`),!0)}var releasetag=releaseTag,gitaddcommitpush=async function({preCommand:e=!1,files:r="*",commitMsg:t="chore: add new files",push:o=!0}={}){if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++)await exec_1(e[r]);else await exec_1(e);if(Array.isArray(r))for(let e=0;e<r.length;e++)await exec_1(`git ls-files '${r[e]}' | xargs git add`);else await exec_1(`git ls-files '${r}' | xargs git add`);await exec_1(`git commit -m "${t}"`).then(()=>{o&&exec_1("git push")}).catch(()=>{process.stdout.write("Nothing to commit, not running git push. \n")})},_0777=parseInt("0777",8),mkdirp=mkdirP.mkdirp=mkdirP.mkdirP=mkdirP;function mkdirP(e,r,t,o){"function"==typeof r?(t=r,r={}):r&&"object"==typeof r||(r={mode:r});var s=r.mode,n=r.fs||fs;void 0===s&&(s=_0777&~process.umask()),o||(o=null);var i=t||function(){};e=path.resolve(e),n.mkdir(e,s,function(t){if(!t)return i(null,o=o||e);switch(t.code){case"ENOENT":mkdirP(path.dirname(e),r,function(t,o){t?i(t,o):mkdirP(e,r,i,o)});break;default:n.stat(e,function(e,r){e||!r.isDirectory()?i(t,o):i(null,o)})}})}function hash(){return crypto.randomBytes(10).toString("hex")}mkdirP.sync=function e(r,t,o){t&&"object"==typeof t||(t={mode:t});var s=t.mode,n=t.fs||fs;void 0===s&&(s=_0777&~process.umask()),o||(o=null),r=path.resolve(r);try{n.mkdirSync(r,s),o=o||r}catch(s){switch(s.code){case"ENOENT":o=e(path.dirname(r),t,o),e(r,t,o);break;default:var i;try{i=n.statSync(r)}catch(e){throw s}if(!i.isDirectory())throw s}}return o};var writecoverage=function(e,r,t=""){const o=path.join(r,`${Date.now()}-${t}-${hash()}.json`);mkdirp.sync(path.dirname(o),e=>{if(e)throw e});const s=JSON.stringify(e||{});"{}"!==s&&fs.writeFileSync(o,s)};async function writePageCoverage(e,r){const t=await e.evaluate(()=>window.__coverage__);writecoverage(t,r,"browser-coverage")}function setPageForCoverage(e,r){e.goto=async(t,o)=>(await writePageCoverage(e,r),e.mainFrame().goto(t,o)),e._close=e.close,e.close=async()=>(await writePageCoverage(e,r),e._close())}var loadbrowser=async function(e,r,t){let o;commonjsGlobal.browser?o=commonjsGlobal.browser:(o=commonjsGlobal.browser="string"==typeof t?await puppeteer.connect({browserWSEndpoint:t,ignoreHTTPSErrors:!0}):await puppeteer.launch({args:["--no-sandbox","--disable-setuid-sandbox"],ignoreHTTPSErrors:!0,headless:"false"!==process.env.HEADLESS,devtools:!1}),e&&r&&(o.__newPage=o.newPage,o.newPage=async()=>{const e=await o.__newPage();return setPageForCoverage(e,r),e},o.__close=o.close,o.close=async()=>{const e=await o.pages();for(let r=0;r<e.length;r++)await e[r].close();return o.__close()}));const s=await o.newPage();return await s.setViewport({width:1280,height:800}),commonjsGlobal.page||(commonjsGlobal.page=s),{browser:o,page:s}};const{fork:fork}=child_process;var parallel=async function(e,r=!0){const t=[];let o=0;r&&await loadbrowser();for(let s=0;s<e.length;s++){const n=e[s];n.browserWSEndpoint=r?commonjsGlobal.browser.wsEndpoint():n.browserWSEndpoint;const i=fork(path.join(__dirname,"./run"),process.argv);t.push(new Promise(e=>{i.on("exit",r=>{r&&r>0&&commonjsGlobal.console.log("[36m%s[0m",`Config#${s}: tests from ${n.root} exited with code ${r}`),e()}),i.on("message",e=>{o+=Number(e)}),i.on("error",e=>{commonjsGlobal.console.error(e)}),i.send(jsonFn.stringify(n))}))}if(await Promise.all(t),r&&await commonjsGlobal.browser.close(),o>0)throw o;return 0};function getCaller(){try{let e,r,t=new Error;for(Error.prepareStackTrace=function(e,r){return r},r=t.stack.shift().getFileName();t.stack.length;)if(r!==(e=t.stack.shift().getFileName()))return e}catch(e){}}var testglobals=(e,r)=>{commonjsGlobal.__pdescribes=[],commonjsGlobal.ENV=process.env.NODE_ENV=process.env.NODE_ENV||"test",commonjsGlobal.Mocha=mocha,commonjsGlobal.chai=chai$1,commonjsGlobal.sinon=commonjsGlobal.sinon||sinon.createSandbox(),commonjsGlobal.assert=chai.assert,commonjsGlobal.expect=chai.expect,commonjsGlobal.should=chai.should(),commonjsGlobal.delay=e=>new Promise(r=>{setTimeout(function(){r()},e)}),commonjsGlobal.pdescribe=function(t,o){const s=getCaller();if(s&&e&&!e.parallel&&r){const r=deepmerge({},e);deepmerge(r,{browserWSEndpoint:commonjsGlobal.browser?commonjsGlobal.browser.wsEndpoint():void 0,filters:[s],parallel:!0,junitXmlFile:path.join(e.junitXmlFile,`../../${path.basename(getCaller()).replace(".test.js","")}/results.xml`),port:"random"}),commonjsGlobal.__pdescribes.push(parallel([r],!0).catch(e=>e))}else describe(t,o)},chai.use(chaiAsPromised)};const{createInstrumenter:createInstrumenter}=istanbulLibInstrument,reporter=istanbulApi.createReporter(),instrumenter=createInstrumenter({esModules:!0});var transformcoverage=function(e,r,t,o=["html"]){const s=istanbulLibSourceMaps.createSourceMapStore({});let n=istanbulLibCoverage.createCoverageMap();fs.existsSync(e)&&(loaddir({dir:e,onFile:e=>{e.match(/browser/)&&n.merge(JSON.parse(fs.readFileSync(e)))}}),n=s.transformCoverage(n).map,loaddir({dir:e,onFile:e=>{e.match(/unit/)&&n.merge(JSON.parse(fs.readFileSync(e)))}}),loaddir({dir:r,onFile:e=>{if(".js"===e.slice(-3)&&e.match(t)&&!n.data[e]){const r=fs.readFileSync(e).toString();instrumenter.instrumentSync(r,e);const t={};t[e]=instrumenter.fileCoverage,n.merge(t)}}}),n.filter(e=>e.match(t)),o.forEach(e=>reporter.add(e)),reporter.write(n))},getports=async function(){const e=await portfinder.getPortPromise({port:1e4});return[e,await portfinder.getPortPromise({port:e+1})]};const instrumenter$1=istanbulLibInstrument.createInstrumenter(),{App:App,SSLApp:SSLApp}=server$1;function staticInstrument(e,r,t=!1){loaddir({dir:r,onFile:o=>{t&&".js"===o.slice(-3)&&fs.existsSync(o+".map")?e.get("/"+path.relative(r,o),e=>{e.onAborted(commonjsGlobal.console.log);const r=fs.readFileSync(o,"utf-8");e.writeHeader("content-type","application/javascript; charset=UTF-8"),e.end(instrumenter$1.instrumentSync(r,o,JSON.parse(fs.readFileSync(o+".map"))))}):e.file("/"+path.relative(r,o),o)}})}var server=async function(e,{extraStaticFolders:r=[],setGlobals:t=!0,coverage:o=!0,port:s=!1,securePort:n=!1}={}){const i=[];function a(t,s,n){staticInstrument(t,e,o),staticInstrument(t,path.join(e,"../../dist"),o),r.forEach(e=>{staticInstrument(t,e,o)}),i.push([t,s,n])}let l,c;if(s){let r;"function"==typeof(r=fs.existsSync(path.join(e,"server.js"))?commonjsRequire(path.join(e,"server.js")):new App).file?a(r,s,!1):i.push([r,s,!1]),l=r}if(n){let r;"function"==typeof(r=fs.existsSync(path.join(e,"secureserver.js"))?commonjsRequire(path.join(e,"secureserver.js")):new SSLApp({key_file_name:path.join(__dirname,"keys/server.key"),cert_file_name:path.join(__dirname,"keys/server.crt")})).file?a(r,n,!0):i.push([r,n,!0]),c=r}return{secureApp:c,app:l,listen:async()=>{for(let r=0;r<i.length;r++){let[o,s,n]=i[r];"random"===s&&(s=(await getports())[0]),t&&s&&(commonjsGlobal[n?"SPATH":"PATH"]=`http${n?"s":""}://localhost:${s}`,commonjsGlobal[n?"securePort":"port"]=s),o.listen(s,r=>{r?commonjsGlobal.console.log(`Test server listening on port ${s}, serving ${e}`):commonjsGlobal.console.log("Test server failed to listen to port "+s)})}},close:()=>{c&&c.close&&c.close(),l&&l.close&&l.close()}}};function loadTests(e,r,t,o){loaddir({dir:e,onFile:e=>{o.map(r=>e.indexOf(r)>=0).indexOf(!0)>=0&&e.match(t)&&r.addFile(e)}})}async function runCommands(e){if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++)await exec_1(e[r]).catch(commonjsGlobal.console.error);else await exec_1(e).catch(commonjsGlobal.console.error)}async function runTests(e={},r=!1,t){if(Array.isArray(e)){for(let r=0;r<e.length;r++)await runCommands(e[r].preCommand),delete e[r].preCommand;if(r)return parallel(e,t);{let r=0;for(let t=0;t<e.length;t++)r+=await runTests(e[t]).catch(e=>Number(e)?Number(e):(process.stderr.write(e+"\n"),0));if(r>0)throw r;return 0}}const{root:o=path.resolve("./"),serverOnly:s=!1,runUnitTests:n=!0,runBrowserTests:i=!0,coverage:a=!1,setGlobals:l=!0,testFileRegex:c=/\.test\.js$/,sourceFileRegex:u=/\.js$/,filters:p=[""],folders:m={},preCommand:d=!1,port:f="random",securePort:g=!1,useJunitReporter:h=!1,junitXmlFile:_=path.join(o,`./test-results/${path.basename(o)}/results.xml`),inspect:b=!1,reporters:v=["html"],mochaOptions:w={},before:j,browserWSEndpoint:y}=e;b&&inspector.open(void 0,void 0,!0);const x="function"==typeof j&&j();x instanceof Promise&&await x;const P=deepmerge({unitTest:path.join(o,"./test/unit"),browserTest:path.join(o,"./test/browser"),public:path.join(o,"./test/public"),static:[],coverage:path.join(o,"./.nyc_output"),source:path.join(o,"./src")},m,!0);if(a&&!commonjsGlobal.__s_dev_cov){const{createInstrumenter:e}=istanbulLibInstrument,r=e(),{hookRequire:t}=istanbulLibHook;t(e=>e.indexOf(P.source)>-1&&e.match(u),(e,{filename:t})=>r.instrumentSync(e,t)),commonjsGlobal.__s_dev_cov=!0}await runCommands(d);const S=await server(P.public,{extraStaticFolders:P.static,setGlobals:l,coverage:a,port:f,securePort:g});if(s)return await S.listen(),"server";l&&testglobals(e,r),h&&(w.reporter="mocha-junit-reporter",w.reporterOptions={mochaFile:_});const k=new mocha(w);return!i&&n||!fs.existsSync(P.browserTest)||(await S.listen(),await loadbrowser(a,P.coverage,y),loadTests(P.browserTest,k,c,p)),!n&&i||!fs.existsSync(P.unitTest)||loadTests(P.unitTest,k,c,p),new Promise((e,r)=>{k.run(async t=>{if(S.close(),commonjsGlobal.browser&&!y&&(await browser.close(),delete commonjsGlobal.browser,delete commonjsGlobal.page),commonjsGlobal.__pdescribes){t+=(await Promise.all(commonjsGlobal.__pdescribes)).reduce((e,r)=>e+r,0)}a&&(writecoverage(commonjsGlobal.__coverage__,P.coverage,"unit-coverage"),transformcoverage(P.coverage,P.source,u,v)),t?r(t):e(0)})})}process.on("message",async e=>{e=jsonFn.parse(e),await runTests(e,!0).catch(e=>{Number(e)?process.send(`${e}`):process.stderr.write(e+"\n")}).then(e=>{"server"!==e&&process.exit()})});var run=runTests,objectselect=(e,r=[])=>{const t={};return r.forEach(r=>{e[r]&&(t[r]=e[r])}),t},sifrr_dev={loadDir:loaddir,deepMerge:deepmerge,getRollupConfig:getrollupconfig,generateChangelog:generatechangelog,exec:exec_1,checkTag:checktag,releaseTag:releasetag,gitAddCommitPush:gitaddcommitpush,runTests:run,objectSelect:objectselect},sifrr_dev_1=sifrr_dev.loadDir,sifrr_dev_2=sifrr_dev.deepMerge,sifrr_dev_3=sifrr_dev.getRollupConfig,sifrr_dev_4=sifrr_dev.generateChangelog,sifrr_dev_5=sifrr_dev.exec,sifrr_dev_6=sifrr_dev.checkTag,sifrr_dev_7=sifrr_dev.releaseTag,sifrr_dev_8=sifrr_dev.gitAddCommitPush,sifrr_dev_9=sifrr_dev.runTests,sifrr_dev_10=sifrr_dev.objectSelect;exports.checkTag=sifrr_dev_6,exports.deepMerge=sifrr_dev_2,exports.default=sifrr_dev,exports.exec=sifrr_dev_5,exports.generateChangelog=sifrr_dev_4,exports.getRollupConfig=sifrr_dev_3,exports.gitAddCommitPush=sifrr_dev_8,exports.loadDir=sifrr_dev_1,exports.objectSelect=sifrr_dev_10,exports.releaseTag=sifrr_dev_7,exports.runTests=sifrr_dev_9;
/*! (c) @aadityataparia */
