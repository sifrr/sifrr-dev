/*! Sifrr.Dev v0.0.1-dev - sifrr project | MIT licensed | https://github.com/sifrr/sifrr-dev */
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});const fs=_interopDefault(require("fs")),path=_interopDefault(require("path"));var eslintrc={env:{browser:!0,node:!0,es6:!0,mocha:!0},globals:{ENV:!0,fs:!1,path:!1,chai:!1,sinon:!1,assert:!1,expect:!1,should:!1,window:!1,delay:!1,puppeteer:!1,server:!1,port:!1,PATH:!1,page:!1,browser:!1,Sifrr:!1,SifrrStorage:!1},extends:"eslint:recommended",parserOptions:{sourceType:"module",ecmaVersion:2017,esversion:2017},rules:{indent:["error",2],"linebreak-style":["error","unix"],quotes:["error","single",{avoidEscape:!0,allowTemplateLiterals:!0}],semi:["warn","always"],"quote-props":["error","as-needed"],"no-var":["error"],"max-lines":["error",220],"mocha/no-exclusive-tests":"error"},plugins:["html","mocha"],settings:{"html/indent":"+2"}};function loadDir(e,r,t=100){fs.readdirSync(e).forEach(o=>{const s=path.join(e,o);fs.statSync(s).isDirectory()?t>0&&loadDir(s,r,t-1):r(s)})}var loaddir=loadDir;function type(e){return null===e?"null":"object"==typeof e&&Array.isArray(e)?"array":typeof e}function deepMerge(e,r){switch(type(e)){case"array":return[...e,...r];case"object":return Object.keys(r).forEach(t=>{e[t]=deepMerge(e[t],r[t])}),e;default:return void 0===r?e:r}}var deepmerge=deepMerge,dev={eslintrc:eslintrc,loadDir:loaddir,deepMerge:deepmerge},dev_1=dev.eslintrc,dev_2=dev.loadDir,dev_3=dev.deepMerge;exports.deepMerge=dev_3,exports.default=dev,exports.eslintrc=dev_1,exports.loadDir=dev_2;
/*! (c) @aadityataparia */
